var MarkdownEditor = React.createClass({
	rawMarkup: function() {
		marked.setOptions({
			renderer: new marked.Renderer(),
			gfm: true,
			tables: true,
			breaks: true,
			pedantic: false,
			sanitize: true,
			smartLists: true,
			smartypants: true,
			highlight: function (code) {
				return hljs.highlightAuto(code).value
			}
		})
	
		var rawMarkup = marked(this.state.content, {sanitize: true})
		return {
			__html: rawMarkup
		}
	},
	componentWillMount: function() {
		const script = document.createElement("script")
	
		script.src = "./js/storage.js"
		script.async = true
	
		document.body.appendChild(script)

		// const myScript = document.createElement("script")
		
		// script.src = "./js/script.js"
		// script.async = false
	
		// document.body.appendChild(myScript)
	},
	getInitialState: function() {
		return {
			content: localStorage.getItem('markdownStorage') || '### Type Markdown Here'
		}
	},
	handleChange: function(event) {
		this.setState({
			content: event.target.value
		})
	},
	render: function() {
		return (
			<div className="container-fluid main">
				<div className="row">
				<div className="name">
				<img className="logo" src="../img/markit.png"/>
				<h1 className="text-center">
						Markit- Markdown Editor
					</h1>
				</div>
					{/* <div>
						<div>
							Words: <span  id="words"></span>
						</div>
					</div> */}
					<div className="col-xs-12 col-sm-12  col-md-6 preview">
					{ <h3 className="title">Preview</h3>}
						<div id="preview" dangerouslySetInnerHTML={this.rawMarkup()}></div>
					</div>
					<div className="col-xs-12 col-sm-12  col-md-6">
						<h3 className=" edit">Markdown</h3>
						<textarea onkeypress="countChar()" id="textarea" className="markdown" defaultValue={this.state.content} onChange={this.handleChange}></textarea>
					</div>
					
				</div>
			</div>
		)
	}
})
ReactDOM.render(
	<MarkdownEditor />,
	document.getElementById('app')
)